---

- name: burp | server | unprivileged user
  tags:
    - user
  user:
    name: "{{ burp_user }}"
    shell: /bin/false
    home: "{{ burp_data_dir }}"
    system: yes

- name: burp | server | config
  tags:
    - config
  template:
    src: "{{ item.src }}.j2"
    dest: "{{ burp_conf_dir }}/{{ item.dest }}/{{ item.src }}"
    owner: "{{ burp_user }}"
    mode: 0400
  loop:
    - { src: server.conf, dest: "" }
    - { src: dhfile.pem, dest: keys }
  notify: restart burp

- name: burp | server | directories
  tags:
    - dir
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ burp_user }}"
    group: "{{ burp_user }}"
    mode: 0750
  loop:
    - "{{ burp_data_dir }}"
    - "{{ burp_pid_dir }}"

- name: burp | server | offsite backup script
  tags:
    - script
  template:
    src: offsite.j2
    dest: "{{ burp_conf_dir }}/offsite"
    owner: "{{ burp_user }}"
    group: "{{ burp_user }}"
    mode: 0750
  when: not not burp_offsite

- name: burp | server | offsite backup cron
  tags:
    - cron
  cron:
    name: 'burp offsite storage cron'
    cron_file: burp_offsite
    user: root
    minute: "{{ 59 | random(seed=inventory_hostname) }}"
    hour: 3
    job: "{{ burp_conf_dir }}/offsite"
  when: not not burp_offsite

- name: burp | server | systemd service
  tags:
    - systemd
  template:
    src: burp.service.j2
    dest: /etc/systemd/system/burp.service
  notify: daemon-reload burp

- name: burp | server | service
  tags:
    - service
  service:
    name: burp
    state: started
    enabled: yes
